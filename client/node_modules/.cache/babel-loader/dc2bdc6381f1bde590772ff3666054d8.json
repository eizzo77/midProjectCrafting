{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EiZzO\\\\Documents\\\\Bootcamp Exercises\\\\React\\\\MidProj\\\\client\\\\src\\\\components\\\\CraftingPage.components.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { craftingWeapons } from \"../Data/Crafting_Weapons\";\nimport { Inventory } from \"./Inventory.components\";\nimport { WeaponAvatar } from \"./WeaponAvatar.components\";\nimport { Link } from \"react-router-dom\";\nimport CraftEffectURL from \"../sounds/craft.mp3\";\nimport \"./CraftingPage.components.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CraftingPage = ({\n  character,\n  setCharacter\n}) => {\n  _s();\n\n  const [currentWeapon, setCurrentWeapon] = useState({});\n  const [shopperText, setShopperText] = useState(\"Welcome! Choose a Weapon you desire to craft!\");\n  const [craftEffect] = useState(new Audio(CraftEffectURL));\n  useEffect(() => {\n    return () => setShopperText(`So you're interested in this weapon aren't ya?`);\n  }, [currentWeapon]);\n\n  const onCraftClick = async () => {\n    if (currentWeapon.requiredMaterials.every(material => character.materials[material.type].amount >= material.amount)) {\n      craftEffect.play();\n      setShopperText(\"Nice pick. that's my fav' one\");\n      const addWeapon = [...character.weapons, currentWeapon];\n      const res = await axios.put(endPoint + \"/api/character\", { ...character,\n        weapons: addWeapon\n      });\n      console.log(res);\n      const copiedChar = res.data;\n      currentWeapon.requiredMaterials.forEach(material => copiedChar.materials[material.type].amount -= material.amount);\n      setCharacter(copiedChar);\n    } else {\n      setShopperText(\"Seems like you don't have enough materials!\");\n    }\n  };\n\n  const renderRequiredMaterials = () => {\n    return currentWeapon[\"requiredMaterials\"].map(material => {\n      const charMaterialAmount = character.materials.hasOwnProperty(material.type) ? character.materials[material.type].amount : 0;\n      const requiredMaterialAmount = material.amount;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"material-req\",\n          src: material.imgURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            color: charMaterialAmount >= requiredMaterialAmount ? \"green\" : \"red\"\n          },\n          children: [charMaterialAmount, \"/\", requiredMaterialAmount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, material.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dialogue-avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dialogue-box\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: shopperText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"craft-container slide-in-top\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exit\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-times-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"craft-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Inventory, {\n          onItemClick: setCurrentWeapon,\n          itemsList: craftingWeapons,\n          inventoryCapacity: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(WeaponAvatar, {\n          currentData: currentWeapon,\n          renderRequiredMaterials: renderRequiredMaterials\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onCraftClick()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CraftingPage, \"eBNjRja3Pq4rPNTftlhxd7y6OfI=\");\n\n_c = CraftingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CraftingPage\");","map":{"version":3,"sources":["C:/Users/EiZzO/Documents/Bootcamp Exercises/React/MidProj/client/src/components/CraftingPage.components.jsx"],"names":["useEffect","useState","axios","craftingWeapons","Inventory","WeaponAvatar","Link","CraftEffectURL","CraftingPage","character","setCharacter","currentWeapon","setCurrentWeapon","shopperText","setShopperText","craftEffect","Audio","onCraftClick","requiredMaterials","every","material","materials","type","amount","play","addWeapon","weapons","res","put","endPoint","console","log","copiedChar","data","forEach","renderRequiredMaterials","map","charMaterialAmount","hasOwnProperty","requiredMaterialAmount","imgURL","color","id"],"mappings":"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","sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {craftingWeapons} from \"../Data/Crafting_Weapons\";\r\nimport {Inventory} from \"./Inventory.components\";\r\nimport {WeaponAvatar} from \"./WeaponAvatar.components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport CraftEffectURL from \"../sounds/craft.mp3\";\r\nimport \"./CraftingPage.components.css\";\r\n\r\nexport const CraftingPage = ({character,setCharacter}) => {\r\n\r\n    const [currentWeapon,setCurrentWeapon] = useState({});\r\n    const [shopperText,setShopperText] = useState(\"Welcome! Choose a Weapon you desire to craft!\");\r\n    const [craftEffect] = useState(new Audio(CraftEffectURL))\r\n\r\n\r\n    useEffect( ()=> {\r\n        return () => setShopperText(`So you're interested in this weapon aren't ya?`);\r\n    },[currentWeapon])\r\n\r\n    const onCraftClick = async () => {\r\n        if (currentWeapon.requiredMaterials.every(material => character.materials[material.type].amount >= material.amount)) {\r\n            craftEffect.play();\r\n            setShopperText(\"Nice pick. that's my fav' one\")\r\n            const addWeapon = [...character.weapons,currentWeapon];\r\n            const res = await axios.put(endPoint + \"/api/character\",{...character,weapons:addWeapon});\r\n            console.log(res);\r\n            const copiedChar = res.data;\r\n            currentWeapon.requiredMaterials.forEach(material => copiedChar.materials[material.type].amount -= material.amount);\r\n            setCharacter(copiedChar);\r\n\r\n        } else {\r\n            setShopperText(\"Seems like you don't have enough materials!\");\r\n        }\r\n    }\r\n\r\n    const renderRequiredMaterials = () => {\r\n        return currentWeapon[\"requiredMaterials\"].map(material => {\r\n            const charMaterialAmount = character.materials.hasOwnProperty(material.type) ? character.materials[material.type].amount : 0;\r\n            const requiredMaterialAmount = material.amount;\r\n            return <span key={material.id}>\r\n                <img className=\"material-req\" src={material.imgURL}/>\r\n                <label style={{color:charMaterialAmount >= requiredMaterialAmount ? \"green\" : \"red\"}}>\r\n                    {charMaterialAmount}/{requiredMaterialAmount}\r\n                </label>\r\n                </span>\r\n        })\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div className=\"dialogue-avatar\"></div>\r\n        <div className=\"dialogue-box\">\r\n            <p>{shopperText}</p>\r\n        </div>\r\n            <div className={\"craft-container slide-in-top\"}>\r\n                <Link to=\"/\"><div className=\"exit\"><i class=\"fas fa-times-circle\"></i></div></Link>\r\n                <div className=\"craft-wrapper\">\r\n                    <Inventory onItemClick={setCurrentWeapon} itemsList={craftingWeapons} inventoryCapacity={12}/>\r\n                    <WeaponAvatar currentData={currentWeapon} renderRequiredMaterials={renderRequiredMaterials}/>\r\n                </div>\r\n                <div className=\"btn\"><button onClick={() => onCraftClick()}/></div>\r\n            </div>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}